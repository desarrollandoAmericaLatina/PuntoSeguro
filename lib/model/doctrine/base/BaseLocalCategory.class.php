<?php

/**
 * BaseLocalCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $descripcion_categoria
 * @property string $url_icono_categoria
 * @property Doctrine_Collection $Local
 * 
 * @method string              getName()                  Returns the current record's "name" value
 * @method string              getDescripcionCategoria()  Returns the current record's "descripcion_categoria" value
 * @method string              getUrlIconoCategoria()     Returns the current record's "url_icono_categoria" value
 * @method Doctrine_Collection getLocal()                 Returns the current record's "Local" collection
 * @method LocalCategory       setName()                  Sets the current record's "name" value
 * @method LocalCategory       setDescripcionCategoria()  Sets the current record's "descripcion_categoria" value
 * @method LocalCategory       setUrlIconoCategoria()     Sets the current record's "url_icono_categoria" value
 * @method LocalCategory       setLocal()                 Sets the current record's "Local" collection
 * 
 * @package    geo_search
 * @subpackage model
 * @author     Gustavo Lacoste <gustavo@lacosox.org>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLocalCategory extends sfMapFishRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('local_category');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('descripcion_categoria', 'string', 140, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 140,
             ));
        $this->hasColumn('url_icono_categoria', 'string', 140, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 140,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Local', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}